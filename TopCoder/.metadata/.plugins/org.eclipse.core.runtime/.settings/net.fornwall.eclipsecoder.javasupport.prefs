codeTemplatePreference=import java.io.BufferedReader;\nimport java.io.InputStreamReader;\nimport java.util.*;\n\npublic class $CLASSNAME$ {\n\n\tpublic $RETURNTYPE$ $METHODNAME$($METHODPARAMS$) {\n\t\treturn $DUMMYRETURN$;\n\t}\n    void dumpArray1(Object[] arr, int n) {\n        for(int i \= 0; i < n; i++) {\n            System.out.print(arr[i]);\n            if(i < n - 1)\n                System.out.print(" ");\n        }\n    }\n\n\t/*\n\t * Utils\n\t */\n    void dumpArray2(Object[][] arr, int m, int n) {\n        for(int j \= 0; j < n; j++) {\n            for(int i \= 0; i < m; i++) { \n                System.out.print(arr[i][j]);\n                if (i < m - 1) \n                    System.out.print(" ");\n            }\n\n            System.out.println(" ");\n        }\n    }\n\n    boolean isPrime(int n) {\n        for(int i\=2;i<n;i++) {\n            if(n%i\=\=0)\n                return false;\n        }\n        return true;\n    }\n\n    int getPrime(int n) {\n          List<Integer> primes \= new ArrayList<Integer>();\n          primes.add(2);\n          int count \= 1;\n\n          int x \= 1;\n          while(primes.size() < n) {\n              x+\=2;\n              int m \= (int)Math.sqrt(x);\n              for(int p \: primes) {\n                  if(p > m) {\n                      primes.add(x);\n                      break;\n                  }\n\n                  if(x % p \=\= 0) \n                      break;\n              }\n          }\n\n          return primes.get(primes.size() - 1);\n    }\n}\n
eclipse.preferences.version=1
